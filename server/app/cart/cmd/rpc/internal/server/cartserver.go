// Code generated by goctl. DO NOT EDIT.
// Source: cart.proto

package server

import (
	"context"

	"server/app/cart/cmd/rpc/internal/logic"
	"server/app/cart/cmd/rpc/internal/svc"
	"server/app/cart/cmd/rpc/pb"
)

type CartServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedCartServer
}

func NewCartServer(svcCtx *svc.ServiceContext) *CartServer {
	return &CartServer{
		svcCtx: svcCtx,
	}
}

func (s *CartServer) CartCreate(ctx context.Context, in *pb.CartCreateReq) (*pb.CartNil, error) {
	l := logic.NewCartCreateLogic(ctx, s.svcCtx)
	return l.CartCreate(in)
}

func (s *CartServer) CartList(ctx context.Context, in *pb.CartListReq) (*pb.CartListReply, error) {
	l := logic.NewCartListLogic(ctx, s.svcCtx)
	return l.CartList(in)
}

func (s *CartServer) CartDelete(ctx context.Context, in *pb.CartDeleteReq) (*pb.CartNil, error) {
	l := logic.NewCartDeleteLogic(ctx, s.svcCtx)
	return l.CartDelete(in)
}

func (s *CartServer) CartUpdate(ctx context.Context, in *pb.CartUpdateReq) (*pb.CartNil, error) {
	l := logic.NewCartUpdateLogic(ctx, s.svcCtx)
	return l.CartUpdate(in)
}

func (s *CartServer) CartFind(ctx context.Context, in *pb.CartFindReq) (*pb.CartInfo, error) {
	l := logic.NewCartFindLogic(ctx, s.svcCtx)
	return l.CartFind(in)
}

func (s *CartServer) CartFindByUserIDAndProductID(ctx context.Context, in *pb.CartFindByUserIDAndProductIDReq) (*pb.CartInfo, error) {
	l := logic.NewCartFindByUserIDAndProductIDLogic(ctx, s.svcCtx)
	return l.CartFindByUserIDAndProductID(in)
}
