syntax = "proto3";
option go_package = "./pb";
package pb;

// 解决 pb 包下的命名冲突问题 nil 返回以及入参统一使用 服务名下的 nil
message ProductNil {}
// 公共 分类
message Category {
  int64 ID = 1;
  string CategoryID = 2;
  string ParentId = 3;
  string Name = 4;
  int64 Status = 5;
  int64 Sorted = 13;
  int64 Type = 6;
  string BusinessID = 7;
  repeated Category Children = 8;
  int64 CreatedAt = 11;
  int64 UpdatedAt = 12;
}
message CategoryListAllReply {
  repeated Category List = 1;
}
message CategoryCreateReq{
  string ParentId = 3;
  string Name = 4;
  int64 Status = 5;
  int64 Type = 6;
  int64 Sorted = 8;
  string BusinessID = 7;
}
message CategoryChangeStatusReq {
  string CategoryID = 1;
  int64 Status = 2;
}
message CategoryIDReq {
  string CategoryID = 1;
}
message CategoryUpdateReq {
  string CategoryID = 2;
  string ParentId = 3;
  string Name = 4;
  int64 Status = 5;
  int64 Sorted = 13;
  int64 Type = 6;
  string BusinessID = 7;
}
message CategoryIDSReq {
  repeated string IDS = 1;
}
message CategoryIDSReply {
  repeated string IDS = 1;
}

service product {
  // @desc 所有的分类列表
  rpc categoryListAll (ProductNil) returns (CategoryListAllReply);
  // @desc 分类创建
  rpc categoryCreate (CategoryCreateReq) returns (ProductNil);
  // @desc 修改分类状态
  rpc categoryChangeStatus (CategoryChangeStatusReq) returns (ProductNil);
  // @desc 根据 分类 id 查询分类
  rpc categoryFind (CategoryIDReq) returns (Category);
  // @desc 更新分类
  rpc categoryUpdate (CategoryUpdateReq) returns (ProductNil);
  // @desc 批量删除分类
  rpc categoryBatchDelete (CategoryIDSReq) returns (ProductNil);
  // @desc 分局父分类 id 查询子分类 id 列表
  rpc categoryFindChildrenID (CategoryIDReq) returns (CategoryIDSReply);
  // @desc 单个删除分类
  rpc categoryDelete (CategoryIDReq)  returns (ProductNil);


  // 商品列表 分页
  rpc productList (ProductNil) returns (ProductNil);
}
