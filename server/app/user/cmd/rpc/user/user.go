// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package user

import (
	"context"

	"server/app/user/cmd/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	UserInfoReply = pb.UserInfoReply
	UserInfoReq   = pb.UserInfoReq

	User interface {
		GetUserInfoById(ctx context.Context, in *UserInfoReq, opts ...grpc.CallOption) (*UserInfoReply, error)
	}

	defaultUser struct {
		cli zrpc.Client
	}
)

func NewUser(cli zrpc.Client) User {
	return &defaultUser{
		cli: cli,
	}
}

func (m *defaultUser) GetUserInfoById(ctx context.Context, in *UserInfoReq, opts ...grpc.CallOption) (*UserInfoReply, error) {
	client := pb.NewUserClient(m.cli.Conn())
	return client.GetUserInfoById(ctx, in, opts...)
}
