// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package server

import (
	"context"

	"server/app/user/cmd/rpc/internal/logic"
	"server/app/user/cmd/rpc/internal/svc"
	"server/app/user/cmd/rpc/pb"
)

type UserServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedUserServer
}

func NewUserServer(svcCtx *svc.ServiceContext) *UserServer {
	return &UserServer{
		svcCtx: svcCtx,
	}
}

func (s *UserServer) Find(ctx context.Context, in *pb.IDReq) (*pb.UserInfoReply, error) {
	l := logic.NewFindLogic(ctx, s.svcCtx)
	return l.Find(in)
}

func (s *UserServer) List(ctx context.Context, in *pb.PageReq) (*pb.PageReply, error) {
	l := logic.NewListLogic(ctx, s.svcCtx)
	return l.List(in)
}

func (s *UserServer) Create(ctx context.Context, in *pb.CreateReq) (*pb.Nil, error) {
	l := logic.NewCreateLogic(ctx, s.svcCtx)
	return l.Create(in)
}

func (s *UserServer) Update(ctx context.Context, in *pb.UpdateReq) (*pb.Nil, error) {
	l := logic.NewUpdateLogic(ctx, s.svcCtx)
	return l.Update(in)
}

func (s *UserServer) Delete(ctx context.Context, in *pb.IDReq) (*pb.Nil, error) {
	l := logic.NewDeleteLogic(ctx, s.svcCtx)
	return l.Delete(in)
}

func (s *UserServer) BatchDelete(ctx context.Context, in *pb.IDsReq) (*pb.Nil, error) {
	l := logic.NewBatchDeleteLogic(ctx, s.svcCtx)
	return l.BatchDelete(in)
}
