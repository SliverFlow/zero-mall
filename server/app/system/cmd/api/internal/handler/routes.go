// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	base "server/app/system/cmd/api/internal/handler/base"
	menu "server/app/system/cmd/api/internal/handler/menu"
	role "server/app/system/cmd/api/internal/handler/role"
	user "server/app/system/cmd/api/internal/handler/user"
	"server/app/system/cmd/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/captcha",
				Handler: base.CaptchaHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/file/upload",
				Handler: base.UploadHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/login",
				Handler: base.LoginHandler(serverCtx),
			},
		},
		rest.WithPrefix("/system/base"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.Auth},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/health",
					Handler: user.HealthHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/user/create",
					Handler: user.UserCreateHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/user/update",
					Handler: user.UserUpdateHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/user/findByUUID",
					Handler: user.UserFindByUUIDHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/user/changeRole",
					Handler: user.UserAdminChangeRoleHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/system/v1"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.Auth},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/role/create",
					Handler: role.RoleCreateHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/role/update",
					Handler: role.RoleUpdateHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/system/v1"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.Auth},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/menu/listByUUID",
					Handler: menu.MenuListByUUIDHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/menu/listAllByRole",
					Handler: menu.MenuListAllByRoleHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/menu/changeStatus",
					Handler: menu.MenuChangeStatusHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/system/v1"),
	)
}
