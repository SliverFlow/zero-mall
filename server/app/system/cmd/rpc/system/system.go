// Code generated by goctl. DO NOT EDIT.
// Source: system.proto

package system

import (
	"context"

	"server/app/system/cmd/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	LoginReply = pb.LoginReply
	LoginReq   = pb.LoginReq
	User       = pb.User

	System interface {
		// 系统登录
		Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*LoginReply, error)
	}

	defaultSystem struct {
		cli zrpc.Client
	}
)

func NewSystem(cli zrpc.Client) System {
	return &defaultSystem{
		cli: cli,
	}
}

// 系统登录
func (m *defaultSystem) Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*LoginReply, error) {
	client := pb.NewSystemClient(m.cli.Conn())
	return client.Login(ctx, in, opts...)
}
