// Code generated by goctl. DO NOT EDIT.
// Source: log.proto

package log

import (
	"context"

	"server/app/log/cmd/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	LogCreateReq     = pb.LogCreateReq
	LogNil           = pb.LogNil
	LogPageListReply = pb.LogPageListReply
	LogPageListReq   = pb.LogPageListReq
	LogReply         = pb.LogReply

	Log interface {
		LogCreate(ctx context.Context, in *LogCreateReq, opts ...grpc.CallOption) (*LogNil, error)
		LogPageList(ctx context.Context, in *LogPageListReq, opts ...grpc.CallOption) (*LogPageListReply, error)
	}

	defaultLog struct {
		cli zrpc.Client
	}
)

func NewLog(cli zrpc.Client) Log {
	return &defaultLog{
		cli: cli,
	}
}

func (m *defaultLog) LogCreate(ctx context.Context, in *LogCreateReq, opts ...grpc.CallOption) (*LogNil, error) {
	client := pb.NewLogClient(m.cli.Conn())
	return client.LogCreate(ctx, in, opts...)
}

func (m *defaultLog) LogPageList(ctx context.Context, in *LogPageListReq, opts ...grpc.CallOption) (*LogPageListReply, error) {
	client := pb.NewLogClient(m.cli.Conn())
	return client.LogPageList(ctx, in, opts...)
}
